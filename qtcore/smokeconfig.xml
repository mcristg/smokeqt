<config>
    <moduleName>qtcore</moduleName>
    <scalarTypes>
        <!-- QString is a class, but represented as a scalar (#) in munged names -->
        <typeName>QString</typeName>
    </scalarTypes>
    <voidpTypes>
        <!-- both are classes, but they are represented as Smoke::t_voidp -->
        <typeName>QStringList</typeName>
        <typeName>QString</typeName>
    </voidpTypes>
    <exclude>
        <!-- Avoid including any functions that start with "q" thar are not
             part of Qt -->
        <signature>.*void quick_exit\(int\).*$</signature>
        <signature>.*void qsort(_[rb])?\(void\*, unsigned long, unsigned long.*</signature>
        <signature>.*(int|char\*) q(e|f|g)cvt(_r)?\(.*</signature>

        <!-- we don't want private stuff in smoke.. -->
        <signature>.*::d_ptr.*</signature>
        <signature>.*::q_ptr.*</signature>
        <signature>.*Private.*</signature>
        <signature>.*QExplicitlySharedDataPointer&lt;QCollatorSortKeyPrivate&gt;.*</signature>
        <signature>.*Q(ByteArray|String)::(from|to)Std(W)?String.*</signature>
        <signature>^QSharedDataPointer&lt;QCollatorSortKeyPrivate&gt; QCollatorSortKey::d$</signature>
        <signature>^static int QMetaType::registerNormalizedType(|def)\(.*</signature>
        <signature>^static int QMetaType::type\(const QByteArray.*\)$</signature>
        <signature>^QExplicitlySharedDataPointer&lt;QMimeTypePrivate&gt; QMimeType::d$</signature>
        <signature>^(::)?QResource\* QResource::QResource\(const QResource.*&amp;.*\)</signature>
        <signature>.*QString::v?a?sprintf.*</signature>
        <signature>.*QUuid::data4.*</signature>
        <signature>^bool qt_sendSpontaneousEvent\(.*\)$</signature>
        <signature>^std::reverse_iterator.*</signature>
        <signature>^QDebug.*&amp;.*operator&lt;&lt;.*\(.*nullptr.*\)$</signature>
        <signature>^static QString QString::fromStdU16String\(.*\)$</signature>
        <signature>.*QString::toStdU16String\(.*\) const$</signature>
        <signature>^static QString QString::fromStdU32String\(.*\)$</signature>
        <signature>.*QString::toStdU32String\(.*\) const$</signature>
        <signature>.*std::chrono::duration.*</signature>
        <signature>^void QMessageLogContext::copy\(const QMessageLogContext&amp;\)$</signature>
        <signature>.*std::chrono::.*QDeadlineTimer::remainingTimeAsDuration\(\) const$</signature>
	<signature>.*QDataStream::operator...*q(int|float).*</signature>
			
	<signature>.*QByteArray::FromBase64Result::decodingStatus.*</signature>

        <!-- Smoke does not have complete rvalue reference support -->
        <signature>^(::)?QSignalBlocker\*.*QSignalBlocker::QSignalBlocker\(QSignalBlocker.*\).*</signature>
        <signature>^(::)?QSignalBlocker.*&amp;.*(QSignalBlocker::)?operator=\(QSignalBlocker.*&amp;.*\).*</signature>

	<signature>^(::)?QDataStream.*&amp;.*operator(&lt;&lt;|&gt;&gt;).*\(.*QDataStream.*&amp;.*\)</signature>
		
	<!-- call to deleted member function 'operator=' -->
	<signature>.*operator=\(QSemaphoreReleaser&amp;.*.*</signature>
			
	<!-- call to implicitly-deleted copy constructor of 'classname' -->
	<signature>.*QResource\(const QResource&amp;\)$</signature>
	<signature>.*QSemaphoreReleaser\(QSemaphoreReleaser&amp;\)$</signature>

        <!-- Ignore Mac types -->
        <signature>^CGPoint QPointF?::toCGPoint\(\) const$</signature>
        <signature>^static QPointF? QPointF?::fromCGPoint\(CGPoint\)$</signature>
        <signature>^CGRect QRectF?::toCGRect\(\) const$</signature>
        <signature>^static QRectF? QRectF?::fromCGRect\(CGRect\)$</signature>
        <signature>^CGSize QSizeF?::toCGSize\(\) const$</signature>
        <signature>^static QSizeF? QSizeF?::fromCGSize\(CGSize\)$</signature>
        <signature>.*operator&lt;&lt;\(.*const objc_object\*\)$</signature>
        <signature>.*(from|to)(Raw)?NS(Data|Date|String|URL|UUID|TimeZone).*</signature>
    </exclude>
    <functions>
        <!-- include functions starting with 'q' -->
        <name>^q.*</name>
        <name>.*::q.*</name>
        <!-- and operators -->
        <name>.*operator.*</name>
    </functions>
    <classList>
        <class>QAbstractAnimation</class>
        <class>QAbstractEventDispatcher</class>
        <class>QAbstractEventDispatcher::TimerInfo</class>
        <class>QAbstractItemModel</class>
        <class>QAbstractListModel</class>
        <class>QAbstractNativeEventFilter</class>
        <class>QAbstractProxyModel</class>
        <class>QAbstractState</class>
        <class>QAbstractTableModel</class>
        <class>QAbstractTransition</class>
        <class>QAnimationGroup</class>
        <class>QAssociativeIterable</class>
        <class>QAtomicInt</class>
        <class>QAtomicInteger</class>
        <class>QAtomicPointer</class>
        <class>QBEInteger</class>
        <class>QBasicTimer</class>
        <class>QBitArray</class>
        <class>QBuffer</class>
        <class>QByteArray</class>
        <class>QByteArray::FromBase64Result</class>
        <class>QByteArrayList</class>
        <class>QByteArrayMatcher</class>
        <class>QCache</class>
        <class>QCalendar</class>
        <class>QCborArray</class>
        <class>QCborError</class>
        <class>QCborMap</class>
        <class>QCborMap::ConstIterator</class>
        <class>QCborMap::Iterator</class>
        <class>QCborParserError</class>
        <class>QCborStreamReader</class>
        <class>QCborStreamReader::StringResult</class>
        <class>QCborStreamWriter</class>
        <!--<class>QCborValue</class>-->
        <class>QChar</class>
        <class>QChildEvent</class>
        <class>QCollator</class>
        <class>QCollatorSortKey</class>
        <class>QCommandLineOption</class>
        <class>QCommandLineParser</class>
        <class>QConcatenateTablesProxyModel</class>
        <class>QContiguousCache</class>
        <class>QCoreApplication</class>
        <class>QCryptographicHash</class>
        <class>QDataStream</class>
        <class>QDate</class>
        <class>QDateTime</class>
        <class>QDeadlineTimer</class>
        <class>QDebug</class>
        <class>QDebugStateSaver</class>
        <class>QDir</class>
        <class>QDirIterator</class>
        <class>QDynamicPropertyChangeEvent</class>
        <class>QEasingCurve</class>
        <class>QElapsedTimer</class>
        <class>QEnableSharedFromThis</class>
        <class>QEvent</class>
        <class>QEventLoop</class>
        <class>QEventLoopLocker</class>
        <class>QEventTransition</class>
        <!-- <class>QException</class> Thread-related -->
        <class>QExplicitlySharedDataPointer</class>
        <class>QFile</class>
        <class>QFileDevice</class>
        <class>QFileInfo</class>
        <class>QFileSelector</class>
        <class>QFileSystemWatcher</class>
        <class>QFinalState</class>
        <class>QFlag</class>
        <class>QFlags</class>
        <class>QFuture</class>
        <class>QFutureIterator</class>
        <class>QFutureSynchronizer</class>
        <class>QFutureWatcher</class>
        <class>QGenericArgument</class>
        <class>QGenericReturnArgument</class>
        <class>QGlobalStatic</class>
        <class>QGregorianCalendar</class>
        <class>QHash</class>
        <class>QHashIterator</class>
        <class>QHistoryState</class>
        <class>QIODevice</class>
        <class>QIdentityProxyModel</class>
        <class>QItemSelection</class>
        <class>QItemSelectionModel</class>
        <class>QItemSelectionRange</class>
        <class>QJalaliCalendar</class>
        <class>QJsonArray</class>
        <class>QJsonDocument</class>
        <class>QJsonObject</class>
        <class>QJsonParseError</class>
        <class>QJsonValue</class>
        <class>QJulianCalendar</class>
        <class>QKeyValueIterator</class>
        <class>QLEInteger</class>
        <class>QLatin1Char</class>
        <class>QLatin1String</class>
        <class>QLibrary</class>
        <class>QLibraryInfo</class>
        <class>QLine</class>
        <class>QLineF</class>
        <class>QList</class>
        <class>QListIterator</class>
        <class>QLocale</class>
        <class>QLockFile</class>
        <class>QLoggingCategory</class>
        <class>QMap</class>
        <!-- <class>QMap::key_iterator</class> -->
        <class>QMapIterator</class>
        <class>QMargins</class>
        <class>QMarginsF</class>
        <class>QMessageAuthenticationCode</class>
        <class>QMessageLogContext</class>
        <class>QMessageLogger</class>
        <class>QMetaClassInfo</class>
        <class>QMetaEnum</class>
        <class>QMetaMethod</class>
        <class>QMetaObject</class>
        <class>QMetaObject::Connection</class>
        <class>QMetaProperty</class>
        <class>QMetaType</class>
        <class>QMilankovicCalendar</class>
        <class>QMimeData</class>
        <class>QMimeDatabase</class>
        <class>QMimeType</class>
        <class>QModelIndex</class>
        <class>QMultiHash</class>
        <class>QMultiMap</class>
        <class>QMutableHashIterator</class>
        <class>QMutableListIterator</class>
        <class>QMutableMapIterator</class>
        <class>QMutableSetIterator</class>
        <class>QMutableVectorIterator</class>
        <class>QMutex</class>
        <class>QMutexLocker</class>
        <class>QObject</class>
        <class>QObjectCleanupHandler</class>
        <class>QOperatingSystemVersion</class>
        <class>QPair</class>
        <class>QParallelAnimationGroup</class>
        <class>QPauseAnimation</class>
        <class>QPersistentModelIndex</class>
        <class>QPluginLoader</class>
        <class>QPoint</class>
        <class>QPointF</class>
        <class>QPointer</class>
        <class>QProcess</class>
        <class>QProcess::CreateProcessArguments</class>
        <class>QProcessEnvironment</class>
        <class>QPropertyAnimation</class>
        <class>QQueue</class>
        <!--<class>QRandomGenerator</class>-->
        <class>QRandomGenerator64</class>
        <class>QReadLocker</class>
        <class>QReadWriteLock</class>
        <class>QRect</class>
        <class>QRectF</class>
        <class>QRegExp</class>
        <class>QRegularExpression</class>
        <class>QRegularExpressionMatch</class>
        <class>QRegularExpressionMatchIterator</class>
        <class>QResource</class>
        <class>QRomanCalendar</class>
        <class>QRunnable</class>
        <class>QSaveFile</class>
        <class>QScopeGuard</class>
        <class>QScopedArrayPointer</class>
        <class>QScopedPointer</class>
        <class>QScopedValueRollback</class>
        <class>QSemaphore</class>
        <class>QSemaphoreReleaser</class>
        <class>QSequentialAnimationGroup</class>
        <class>QSequentialIterable</class>
        <class>QSet</class>
        <class>QSet::const_iterator</class>
        <class>QSet::iterator</class>
        <class>QSetIterator</class>
        <class>QSettings</class>
        <class>QSharedData</class>
        <class>QSharedDataPointer</class>
        <class>QSharedMemory</class>
        <class>QSharedPointer</class>
        <class>QSignalBlocker</class>
        <class>QSignalMapper</class>
        <class>QSignalTransition</class>
        <class>QSize</class>
        <class>QSizeF</class>
        <class>QSocketNotifier</class>
        <class>QSortFilterProxyModel</class>
        <class>QStack</class>
        <class>QStandardPaths</class>
        <class>QState</class>
        <class>QStateMachine</class>
        <class>QStateMachine::SignalEvent</class>
        <class>QStateMachine::WrappedEvent</class>
        <class>QStaticByteArrayMatcher</class>
        <class>QStaticPlugin</class>
        <class>QStorageInfo</class>
        <class>QString</class>
        <class>QStringList</class>
        <class>QStringListModel</class>
        <class>QStringMatcher</class>
        <class>QStringRef</class>
        <class>QStringView</class>
        <class>QSysInfo</class>
        <class>QSystemSemaphore</class>
        <class>QTemporaryDir</class>
        <class>QTemporaryFile</class>
        <class>QTextBoundaryFinder</class>
        <class>QTextCodec</class>
        <class>QTextDecoder</class>
        <class>QTextEncoder</class>
        <class>QTextStream</class>
        <class>QThread</class>
        <class>QThreadPool</class>
        <class>QThreadStorage</class>
        <class>QTime</class>
        <class>QTimeLine</class>
        <class>QTimeZone</class>
        <class>QTimeZone::OffsetData</class>
        <class>QTimer</class>
        <class>QTimerEvent</class>
        <class>QTranslator</class>
        <!-- <class>QUnhandledException</class> -->
        <class>QUrl</class>
        <class>QUrlQuery</class>
        <class>QUuid</class>
        <class>QVarLengthArray</class>
        <class>QVariant</class>
        <class>QVariantAnimation</class>
        <class>QVector</class>
        <class>QVectorIterator</class>
        <class>QVersionNumber</class>
        <class>QWaitCondition</class>
        <class>QWeakPointer</class>
        <class>QWinEventNotifier</class>
        <class>QWriteLocker</class>
        <class>QXmlStreamAttribute</class>
        <class>QXmlStreamAttributes</class>
        <class>QXmlStreamEntityDeclaration</class>
        <class>QXmlStreamEntityResolver</class>
        <class>QXmlStreamNamespaceDeclaration</class>
        <class>QXmlStreamNotationDeclaration</class>
        <class>QXmlStreamReader</class>
        <class>QXmlStreamWriter</class>
        <class>qfloat16</class>
        <class>QCborSimpleType</class>
        <class>QMetaObjectBuilder</class>

        <!-- namespaces -->
        <class>Qt</class>
    </classList>
    <tripleConditions>
        <tripleCondition>QMetaType|QByteArray name() const|class QByteArray|BadCast</tripleCondition>
    </tripleConditions>
</config>
